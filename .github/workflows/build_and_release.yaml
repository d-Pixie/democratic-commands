name: Build and Release

on:
  push:
    branches: ["main"]
    tags:
      - "v*" # Trigger on version tags like v1.0.0
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mod-jar
          path: build/libs/*.jar

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') # Only run on version tags
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: mod-jar
          path: ./artifacts

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Read changelog
        id: changelog
        run: |
          # Extract changelog for current version (adjust pattern as needed)
          CHANGELOG=$(sed -n '/## \[${{ steps.get_version.outputs.VERSION }}\]/,/## \[/p' CHANGELOG.md | sed '$d')
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          name: Democratic Commands v${{ steps.get_version.outputs.VERSION }}
          body: |
            ## Democratic Commands v${{ steps.get_version.outputs.VERSION }}

            ${{ steps.changelog.outputs.CHANGELOG }}

            ### Installation
            Download the JAR file below and place it in your server's `mods` folder.

            **Requirements:**
            - Minecraft 1.20.1
            - Forge 47.2.0+
          files: ./artifacts/*.jar
          draft: false
          prerelease: false

      - name: Publish to Modrinth
        uses: modrinth/code@v2
        with:
          modrinth-id: YOUR_PROJECT_ID # Replace with your Modrinth project ID
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          files: ./artifacts/democraticcommands-${{ steps.get_version.outputs.VERSION }}.jar
          name: Democratic Commands v${{ steps.get_version.outputs.VERSION }}
          version: ${{ steps.get_version.outputs.VERSION }}
          version-type: release # or beta/alpha
          changelog: ${{ steps.changelog.outputs.CHANGELOG }}
          loaders: forge
          game-versions: |
            1.20.1
            1.20
          dependencies: |
            forge:required

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
